#ifndef WATERSUPPLY_H
#define WATERSUPPLY_H

#include "entities/utility/base/Utility.h"

/**
 * @class WaterSupply
 * @brief Represents a water supply system in the city builder simulation.
 *
 * The WaterSupply class is a type of Utility responsible for providing water to the city.
 */
class WaterSupply : public Utility
{
public:
    /**
     * @brief Constructs a WaterSupply object with specified attributes.
     * 
     * Initializes a WaterSupply facility with detailed parameters, including utility consumption, effects, and dimensions.
     * 
     * @param electricity The amount of electricity consumed by the water supply system.
     * @param water The amount of water consumed by the water supply system.
     * @param symbol A string symbol representing the water supply system on the grid.
     * @param radius The radius of effect of the water supply system.
     * @param localEffect The local effect strength of the water supply system.
     * @param globalEffect The global effect strength of the water supply system.
     * @param width The width of the water supply system.
     * @param height The height of the water supply system.
     * @param revenue The revenue generated by the water supply system.
     * @param size The size of the water supply system (SMALL, MEDIUM, LARGE).
     * @param xPos The X-coordinate of the water supply system on the grid.
     * @param yPos The Y-coordinate of the water supply system on the grid.
     * @param buildTime The time taken to build the water supply system.
     */
    WaterSupply(int electricity, int water, std::string symbol, int radius, int localEffect, int globalEffect, 
            int width, int height, int revenue, Size size, int xPos, int yPos, int buildTime);

    /**
     * @brief Copy constructor for the WaterSupply class.
     * 
     * Creates a new WaterSupply object by copying the attributes of an existing WaterSupply.
     * 
     * @param waterSupply Pointer to the existing WaterSupply object to be copied.
     */
    WaterSupply(WaterSupply* waterSupply);

    /**
     * @brief Destructor for the WaterSupply object.
     */
    virtual ~WaterSupply();

    /**
     * @brief Updates the state of the water supply system.
     * 
     * Defines the specific behavior of the WaterSupply system when it is updated in the simulation.
     */
    void update();

    /**
     * @brief Clones the current WaterSupply object.
     * 
     * Creates and returns a copy of the current WaterSupply instance.
     * 
     * @return A pointer to the newly cloned WaterSupply object.
     */
    Entity* clone();
};

#endif // WATERSUPPLY_H